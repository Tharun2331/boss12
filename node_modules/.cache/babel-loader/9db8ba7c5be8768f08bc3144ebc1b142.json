{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tharun S\\\\crwn\\\\src\\\\pages\\\\shop\\\\shop.components.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport CollectionOverview from \"../../components/collection-overview/collection-overview.components\";\nimport CollectionPage from \"../collection/collection.components\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.components\";\nimport { createStructuredSelector } from \"reselect\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching,\n      isCollectionsLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/Tharun S/crwn/src/pages/shop/shop.components.jsx"],"names":["React","connect","Route","CollectionOverview","CollectionPage","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","WithSpinner","createStructuredSelector","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,kBAAP,MAA+B,qEAA/B;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,SAAQC,0BAAR,QAAyC,+BAAzC;AACA,SAAQC,0BAAR,EAAoCC,yBAApC,QAAoE,iCAApE;AACA,OAAQC,WAAR,MAAyB,uDAAzB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,MAAMC,6BAA6B,GAAGF,WAAW,CAACL,kBAAD,CAAjD;AACA,MAAMQ,yBAAyB,GAAGH,WAAW,CAACJ,cAAD,CAA7C;;AAEA,MAAMQ,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AAErCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAET,MAAAA;AAAF,QAAiC,KAAKU,KAA5C;AACAV,IAAAA,0BAA0B;AAC3B;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,oBAAT;AAA8BC,MAAAA;AAA9B,QAAsD,KAAKJ,KAAjE;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAEL,KAAK,iBACX,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEG;AAA1C,SAAoEH,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAEL,KAAK,iBACX,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACI;AAAvC,SAAgEJ,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAiBD;;AA3BoC;;AA8BvC,MAAMM,eAAe,GAAGZ,wBAAwB,CAAC;AAC/CS,EAAAA,oBAAoB,EAAEZ,0BADyB;AAE/Ca,EAAAA,mBAAmB,EAAEZ;AAF0B,CAAD,CAAhD;;AAKA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,0BAA0B,EAAE,MAAMkB,QAAQ,CAAClB,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAMA,eAAeJ,OAAO,CAACoB,eAAD,EAAiBC,kBAAjB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route } from \"react-router-dom\";\r\nimport CollectionOverview from \"../../components/collection-overview/collection-overview.components\"\r\nimport CollectionPage from \"../collection/collection.components\";\r\nimport {fetchCollectionsStartAsync} from \"../../redux/shop/shop.actions\";\r\nimport {selectIsCollectionFetching, selectIsCollectionsLoaded} from \"../../redux/shop/shop.selectors\"\r\nimport  WithSpinner from \"../../components/with-spinner/with-spinner.components\";\r\nimport { createStructuredSelector } from \"reselect\"\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const { fetchCollectionsStartAsync } = this.props;\r\n    fetchCollectionsStartAsync();\r\n  }\r\n\r\n  render() {\r\n    const { match, isCollectionFetching,isCollectionsLoaded } = this.props;\r\n\r\n    return (\r\n      <div className='shop-page'>\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          render={props => (\r\n            <CollectionOverviewWithSpinner isLoading={isCollectionFetching} {...props} />\r\n          )}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          render={props => (\r\n            <CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props} />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}  \r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isCollectionFetching: selectIsCollectionFetching,\r\n  isCollectionsLoaded: selectIsCollectionsLoaded\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}