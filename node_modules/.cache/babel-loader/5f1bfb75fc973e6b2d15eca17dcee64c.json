{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tharun S\\\\crwn\\\\src\\\\pages\\\\shop\\\\shop.components.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport CollectionOverview from \"../../components/collection-overview/collection-overview.components\";\nimport CollectionPage from \"../collection/collection.components\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.components\";\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/Tharun S/crwn/src/pages/shop/shop.components.jsx"],"names":["React","connect","Route","CollectionOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","ShopPage","Component","state","Loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","loading","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,kBAAP,MAA+B,qEAA/B;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA4D,+BAA5D;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,OAAQC,WAAR,MAAyB,uDAAzB;;AACA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAC;AADF,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOpCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAACP,MAAAA;AAAD,QAAsB,KAAKQ,KAAjC;AACA,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AAC7C,YAAMC,cAAc,GAAGd,+BAA+B,CAACa,QAAD,CAAtD;AACCZ,MAAAA,iBAAiB,CAACa,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAC;AAAT,OAAd;AACE,KAJD;AAKD;;AAIFC,EAAAA,MAAM,GAAG;AACJ,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKT,KAAvB;AACD,wBACE;AAAK,MAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,EAAjC;AAAqC,MAAA,SAAS,EAAGtB,kBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAQ,MAAA,IAAI,EAAG,GAAEqB,KAAK,CAACC,IAAK,gBAA5B;AAA8C,MAAA,SAAS,EAAGrB,cAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADF;AAQH;;AA9BoC;;AA+BtC;;AAED,MAAMsB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCpB,EAAAA,iBAAiB,EAAEa,cAAc,IACjCO,QAAQ,CAACpB,iBAAiB,CAACa,cAAD,CAAlB;AAF8B,CAAL,CAAnC;;AAOA,eAAenB,OAAO,CAAC,IAAD,EAAMyB,kBAAN,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route } from \"react-router-dom\";\r\nimport CollectionOverview from \"../../components/collection-overview/collection-overview.components\"\r\nimport CollectionPage from \"../collection/collection.components\";\r\nimport { firestore, convertCollectionsSnapshotToMap }  from \"../../firebase/firebase.utils\";\r\nimport {updateCollections} from \"../../redux/shop/shop.actions\";\r\nimport  WithSpinner from \"../../components/with-spinner/with-spinner.components\";\r\nclass ShopPage extends React.Component {\r\n  state = {\r\n    Loading:true\r\n  }\r\n\r\n  unsubscribeFromSnapshot = null;\r\n\r\n   componentDidMount() {\r\n     const {updateCollections} = this.props;\r\n     const collectionRef = firestore.collection('collections');\r\n\r\n     collectionRef.onSnapshot(async snapshot => {\r\n   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    updateCollections(collectionsMap);\r\n    this.setState({loading:false});\r\n     })\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n      \tconst { match } = this.props;\r\n      return(\r\n        <div className =\"shop-page\">\r\n            <Route exact path={`${match.path}`}  component= {CollectionOverview} />\r\n            <Route  path={`${match.path}/:collectionId`}  component= {CollectionPage} />\r\n       </div>\r\n\r\n      )\r\n\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateCollections: collectionsMap =>\r\n  dispatch(updateCollections(collectionsMap))\r\n});\r\n\r\n\r\n\r\nexport default connect(null,mapDispatchToProps) (ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}