{"ast":null,"code":"import { takeEvery, call, put } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport ShopActionTypes from \"./shop.types\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"i was fired\");\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } // collectionRef.get().then(snapshot => {\n  //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //   dispatch(fetchCollectionsSuccess(collectionsMap));\n  // })\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/Tharun S/crwn/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAmBC,IAAnB,EAAwBC,GAAxB,QAAmC,oBAAnC;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAA0D,+BAA1D;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACCC,uBADD,EAECC,uBAFD,QAGO,gBAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,aAAZ,CAAN;;AAEA,MAAG;AACD,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAOC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAxB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAkCS,QAAlC,CAAjC;AACA,UAAMX,GAAG,CAACI,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACD,GALD,CAKE,OAAMC,KAAN,EAAY;AACZ,UAAMd,GAAG,CAACK,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD,GAVoC,CAarC;AACA;AACA;AACA;;AACH;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMlB,SAAS,CACbK,eAAe,CAACc,uBADH,EAEbX,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery,call,put } from \"redux-saga/effects\";\r\nimport {firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\nimport ShopActionTypes from \"./shop.types\";\r\nimport {\r\n fetchCollectionsSuccess,\r\n fetchCollectionsFailure\r\n} from \"./shop.actions\";\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    yield console.log(\"i was fired\");\r\n\r\n    try{\r\n      const collectionRef = firestore.collection('collections');\r\n      const  snapshot = yield collectionRef.get();\r\n      const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n      yield put(fetchCollectionsSuccess(collectionsMap));\r\n    } catch(error){\r\n      yield put(fetchCollectionsFailure(error.message))\r\n    }\r\n\r\n\r\n    // collectionRef.get().then(snapshot => {\r\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    //   dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    // })\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeEvery(\r\n    ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionsAsync\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}