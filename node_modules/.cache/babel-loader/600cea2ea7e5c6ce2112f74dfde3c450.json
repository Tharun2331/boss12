{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tharun S\\\\crwn\\\\src\\\\pages\\\\shop\\\\shop.components.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport CollectionOverview from \"../../components/collection-overview/collection-overview.components\";\nimport CollectionPage from \"../collection/collection.components\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.components\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 5\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 3\n      }\n    }));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/Tharun S/crwn/src/pages/shop/shop.components.jsx"],"names":["React","connect","Route","CollectionOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","Loading","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","loading","render","match","props","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,kBAAP,MAA+B,qEAA/B;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA4D,+BAA5D;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,OAAQC,WAAR,MAAyB,uDAAzB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACL,kBAAD,CAAjD;AACA,MAAMO,yBAAyB,GAAGF,WAAW,CAACJ,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOpCC,EAAAA,iBAAiB,GAAG;AAElB,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AAC7C,YAAMC,cAAc,GAAGf,+BAA+B,CAACc,QAAD,CAAtD;AACCb,MAAAA,iBAAiB,CAACc,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAC;AAAT,OAAd;AACE,KAJD;AAKD;;AAIFC,EAAAA,MAAM,GAAG;AACJ,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACC,UAAM;AAACH,MAAAA;AAAD,QAAY,KAAKV,KAAvB;AACF,wBACE;AAAK,MAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AACJ,MAAA,KAAK,MADD;AAEJ,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACE,IAAK,EAFhB;AAGJ,MAAA,MAAM,EAAED,KAAK,iBACX,oBAAE,6BAAF;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAQN,oBAAC,KAAD;AACA,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,gBADpB;AAEA,MAAA,MAAM,EAAED,KAAK,iBACX,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARM,CADF;AAmBH;;AA1CoC;;AA2CtC;;AAED,MAAME,kBAAkB,GAAGC,QAAQ,KAAK;AACtCtB,EAAAA,iBAAiB,EAAEc,cAAc,IACjCQ,QAAQ,CAACtB,iBAAiB,CAACc,cAAD,CAAlB;AAF8B,CAAL,CAAnC;;AAOA,eAAepB,OAAO,CAAC,IAAD,EAAM2B,kBAAN,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route } from \"react-router-dom\";\r\nimport CollectionOverview from \"../../components/collection-overview/collection-overview.components\"\r\nimport CollectionPage from \"../collection/collection.components\";\r\nimport { firestore, convertCollectionsSnapshotToMap }  from \"../../firebase/firebase.utils\";\r\nimport {updateCollections} from \"../../redux/shop/shop.actions\";\r\nimport  WithSpinner from \"../../components/with-spinner/with-spinner.components\";\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n  state = {\r\n    Loading: true\r\n  };\r\n\r\n  unsubscribeFromSnapshot = null;\r\n\r\n   componentDidMount() {\r\n\r\n     const collectionRef = firestore.collection('collections');\r\n\r\n     collectionRef.onSnapshot(async snapshot => {\r\n   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    updateCollections(collectionsMap);\r\n    this.setState({loading:false});\r\n     })\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n      \tconst { match } = this.props;\r\n        const {loading} = this.state;\r\n      return(\r\n        <div className =\"shop-page\">\r\n        <Route\r\n    exact\r\n    path={`${match.path}`}\r\n    render={props => (\r\n      < CollectionOverviewWithSpinner isLoading={loading} {...props} />\r\n    )}\r\n  />\r\n  <Route\r\n  path={`${match.path}/:collectionId`}\r\n  render={props => (\r\n    <CollectionPageWithSpinner isLoading={loading} {...props} />\r\n  )}\r\n/>\r\n       </div>\r\n\r\n      )\r\n\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateCollections: collectionsMap =>\r\n  dispatch(updateCollections(collectionsMap))\r\n});\r\n\r\n\r\n\r\nexport default connect(null,mapDispatchToProps) (ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}